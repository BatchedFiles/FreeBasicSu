<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd"[

	<!ENTITY nbsp "&#160;">
	<!ENTITY t "&#160;&#160;&#160;&#160;">
	
]>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml http://www.w3.org/MarkUp/SCHEMA/xhtml11.xsd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<head>
	<title>Создание чат‐бота для IRC‐сети — FreeBASIC по‐русски</title>
	<meta name="description" content="Библиотека IRC на FreeBASIC'е, создание своего (говорящего) бота" />
	<meta name="keywords" content="IRC, internet relay chat, чат, говорящий бот, говорящий чат‐бот, FreeBASIC, WinAPI, программирование, статьи" />
	
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link href="/styles.css" type="text/css" rel="stylesheet" />
	
</head>

<body>

<ul class="navbar">
	<li><a href="/">Главная</a></li>
	<li><a href="/src/">Статьи</a></li>
	<li><a href="/code/">Проекты</a></li>
	<li><a href="/books/">Учебник</a></li>
	<li><a href="/links.xhtml">Ссылки</a></li>
	<li><a href="/about.xhtml">О сайте</a></li>
</ul>


<h1>Библиотека IRC и личный IRC‐бот</h1>

<p><span class="postername">Эрик Замабувараев‐Ёмолкуу</span> <span class="date">31.03.2016 15:42:14</span></p>

<div class="fileblock">
	
	<a href="https://upload.wikimedia.org/wikipedia/commons/b/b2/Screenshot-XChat-RusNet.png">
	<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Screenshot-XChat-RusNet.png/267px-Screenshot-XChat-RusNet.png" alt="Скриншот XChat 2.8.6." width="267" height="194" />
	</a>
	
</div>


<p>Этим мы и займёмся — напишем «робота», который присоединяется к чату и рассказывает о компьютере. Скажем, ты на работе или в отпуске далеко от дома и хочешь наблюдать за домашней системой или сервером на площадке провайдера. Наш IRC-бот будет сидеть себе в чате и ждать, когда ты появишься и спросишь его о количестве свободной оперативной памяти.</p>

<p>Программ для мониторинга системы немерено, но они страдают повышенной дотошностью и забивают твой почтовый ящик письмами с лишними подробностями о работе компьютера. С нашим ботом всё намного проще: если ты хочешь узнать, сколько осталось свободного места на диске или посмотреть, хватает ли оперативной памяти, просто заскочи в IRC и спроси у него (через приватные сообщения). А самое важное — мы ограничим доступ так, чтобы эти данные мог получить только ты!</p>


<ol class="contents">
	<li><a href="#c1">Стоп… а что такое IRC?</a></li>
	<li><a href="#c2">Сборка библиотеки</a></li>
	<li><a href="#c3">Создание чат‐бота</a>
		<ol>
			<li><a href="#c3c1">Подготовка</a></li>
			<li><a href="#c3c2">Компиляция</a></li>
			<li><a href="#c3c3">События</a></li>
		</ol>
	</li>
	<li><a href="#c4">Продолжаем работать</a></li>
	<li><a href="#c5">Ссылки</a></li>
</ol>




<h2><a id="c1">Стоп… а что такое IRC?</a></h2>

<p>IRC (Internet Relay Chat — ретранслируемый интернет‐чат) — это система обмена сообщениями в режиме реального времени, изобретённая в 1988 году. IRC — открытый текстовый протокол, и написать клиента для него не составит труда. IRC-обсуждения проходят во многих сетях; одни ориентированы на свободное ПО (<a href="irc://chat.freenode.net">chat.freenode.net</a>), другие — на игры, третьи — на болтовню.</p>

<p>Каждая IRC‐сеть состоит из нескольких серверов, связанных друг с другом — можно выбрать как ближайший к тебе географически, так и любой другой случайным образом. В любом случае ты будешь частью одной и той же сети. Например, чтобы начать общаться в сети Freenode, найди IRC‐клиент (например, mIRC, X-Chat или ChatZilla — плагин к огнелисе), запусти его и введи:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/server chat.freenode.net
</code></p>

<p>Примечание: команды IRC в клиентах обычно начинаются со слэша.</p>

<p>После этого смени имя пользователя и зарегистрируй его со своим паролем с помощью следующих команд:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/nick &lt;mynickname&gt;<br />
/msg nickserv register &lt;password&gt;
</code></p>

<p>Потом можно зайти в «канал» (отдельная комната чата) с помощью команды:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/join ##freebasic-ru
</code></p>

<p>Названия каналов обычно начинаются с символа решётки. В данном случае канал «freebasic-ru» начинается с двух решёток, так как он не является официальным, утверждённым сообществом сети Freenode.</p>
<p>Теперь ты можешь писать сообщения в общий чат или приватные сообщения отдельным пользователям (например, в X-Chat для этого щёлкни правой кнопкой мыши на имени пользователя и выбери в меню «Открыть диалог»).</p>

<h2><a id="c2">Сборка библиотеки</a></h2>

<p>Воспользуемся специальной библиотекой <code>libIRC</code>, предоставляющей интерфейс для протокола IRC, — тогда нам не придётся писать тонны кода для работы с сокетами и соединениями. Вместо этого мы попросим библиотеку <code>libIRC</code> позаботиться о сетевых взаимодействиях, а сами будем дрессировать бота, пусть делает то, что нам нужно.</p>

<p>Скомпилировать библиотеку из исходных текстов проще простого. Скачай исходники библиотеки <a href="https://github.com/zamabuvaraeu/IrcClientLibrary">libIRC</a> и запусти компиляцию командой:</p>

<p class="codebox"><span>Код</span> <span>Batch</span><br /><code>
fbc -lib -x "libIRC.a" AsmIrc.bas SendData.bas ReceiveData.bas ParseData.bas GetIrcData.bas SendMessages.bas Network.bas
</code></p>

<p>Либо можешь воспользоваться готовым релизом, там уже лежит скомпилированная библиотека.</p>

<h2><a id="c3">Создание чат‐бота</a></h2>

<h3><a id="c3c1">Подготовка</a></h3>

<p>Создадим две учётных записи для IRC: первая для тебя, вторая для бота (если ты завсегдатай IRC, то первая у тебя уже есть). Это важный этап, поскольку из‐за борьбы со спамом на многих IRC‐серверах пользователь должен зарегистрироваться, чтобы иметь возможность отправлять личные сообщения другим участникам чата.</p>

<p>Зайди в IRC и переключись в твоего обычного пользователя. Если ты ещё не зарегистрирован, то самое время это сделать:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/msg nickserv register &lt;password&gt;
</code></p>

<p>Параметр &lt;password&gt; замени на подходящий пароль (примеры команд приведены для серверов Freenode, в других сетях они могут отличаться). Теперь твой пользователь зарегистрирован на сервере IRC — то есть никто другой это имя не отберёт. Сказать IRC‐серверу кто ты такой, можно с помощью команды:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/msg nickserv identify &lt;password&gt;
</code></p>

<p>Нужно также зарегистрировать ник нашего пока нерождённого бота. Переключись в другого пользователя и задай ему пароль таким образом:</p>

<p class="codebox"><span>Код</span> <span> </span><br /><code>
/nick LeoFitz<br />
/msg nickserv register &lt;password&gt;
</code></p>

<p>Конечно, нужно взять другое имя пользователя, но на канале ##freebasic-ru уже сидит JemmaSimmons, почему бы не создать комплементарную пару ботов? Однако в любом случае стоит запомнить ник и пароль, они понадобятся коду нашего бота.</p>

<h3><a id="c3c2">Компиляция</a></h3>

<p>Итак, мы завели две зарегистрированные учётные записи, себе и боту. Мы готовы к созданию бота, вот его код:</p>
<p>Заголовочный файл bot.bi:</p>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="preprocessor">#ifndef unicode</span><br />
<span class="preprocessor">#define unicode</span><br />
<span class="preprocessor">#endif</span><br />
<span class="remark">&apos; Определения библиотеки</span><br />
<span class="preprocessor">#include once &quot;Irc.bi&quot;</span><br />
<span class="remark">&apos; Обработчики событий</span><br />
<span class="preprocessor">#include once &quot;IrcEvents.bi&quot;</span><br />
<span class="remark">&apos; Константы ответов серверных сообщений</span><br />
<span class="preprocessor">#include once &quot;IrcReplies.bi&quot;</span><br />
<br />
<span class="remark">&apos; Имя сервера</span><br />
<span class="keyword">Const</span> Server = <span class="string">&quot;chat.freenode.net&quot;</span><br />
<span class="remark">&apos; Порт</span><br />
<span class="keyword">Const</span> Port = <span class="string">&quot;6667&quot;</span><br />
<span class="remark">&apos; Пароль на соединение с сервером, в данном случае пуст</span><br />
<span class="keyword">Const</span> Password = <span class="string">&quot;&quot;</span><br />
<span class="remark">&apos; Ник бота</span><br />
<span class="keyword">Const</span> Nick = <span class="string">&quot;LeoFitz&quot;</span><br />
<span class="remark">&apos; Юзер‐строка, необходима для идентификации, не должна содержать пробелов и спецсимволов</span><br />
<span class="keyword">Const</span> UserString = <span class="string">&quot;LeoFitz&quot;</span><br />
<span class="remark">&apos; Описание бота</span><br />
<span class="keyword">Const</span> Description = <span class="string">&quot;IRC bot written in FreeBASIC&quot;</span><br />
<span class="remark">&apos; Ник администратора бота (установи это значение в твой ник)</span><br />
<span class="keyword">Const</span> AdminNick = <span class="string">&quot;AdminNick&quot;</span><br />
<span class="remark">&apos; Пароль для идентификации бота, замени на нужный тебе</span><br />
<span class="keyword">Const</span> BotPassword = <span class="string">&quot;password&quot;</span><br />
<span class="remark">&apos; IP‐адрес и порт, с которых будут идти соединения с сервером</span><br />
<span class="keyword">Const</span> LocalAddress = <span class="string">&quot;0.0.0.0&quot;</span><br />
<span class="keyword">Const</span> LocalPort = <span class="string">&quot;0&quot;</span>
</code></p>

<p>Файл bot.bas:</p>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="preprocessor">#include once &quot;bot.bi&quot;</span><br />
<br />
<span class="remark">&apos; Объект для работы с IRC</span><br />
<span class="keyword">Dim</span> <span class="keyword">Shared</span> objClient <span class="keyword">As</span> <span class="datatype">IrcClient</span><br />
<br />
<span class="remark">&apos; Установка обработчиков событий</span><br />
<span class="keyword">With</span> objClient<br />
&t;.ReceivedRawMessageEvent = @ReceivedRawMessage<br />
&t;.SendedRawMessageEvent = @SendedRawMessage<br />
&t;.ServerMessageEvent = @ServerMessage<br />
&t;.PrivateMessageEvent = @IrcPrivateMessage<br />
<span class="keyword">End With</span><br />
<br />
<span class="remark">&apos; Открытие соединения с сервером</span><br />
<span class="remark">&apos; Параметры:</span><br />
<span class="remark">&apos; Сервер, порт, локальный адрес, локальный порт, пароль на сервер, ник, юзер‐строка, описание, режим видимости</span><br />
<span class="keyword">If</span> objClient.OpenIrc(Server, Port, LocalAddress, LocalPort, Password, Nick, UserString, Description, False) = ResultType.None <span class="keyword">Then</span><br />
<span class="remark">&t;&apos; Соединение с сервером установлено</span><br />
&t;<span class="keyword">Do</span><br />
&t;&t;<span class="remark">&apos; Бесконечный цикл получения данных от сервера до тех пор, пока не будет ошибок</span><br />
&t;<span class="keyword">Loop While</span> objClient.GetData() = ResultType.None<br />
&t;<span class="remark">&apos; Закрыть соединение</span><br />
&t;objClient.CloseIrc()<br />
<span class="keyword">End If</span><br />
<br />
<br />
<span class="remark">&apos; Событие любых входящих данных</span><br />
<span class="keyword">Sub</span> ReceivedRawMessage(<span class="keyword">ByVal</span> AdvData <span class="keyword">As</span> <span class="datatype">Any Ptr</span>, <span class="keyword">ByVal</span> MessageText <span class="keyword">As</span> <span class="datatype">WString Ptr</span>)<br />
&t;<span class="remark">&apos; Просто печатаем на консоль пришедшие данные</span><br />
&t;<span class="keyword">Print</span> MessageText<br />
<span class="keyword">End Sub</span><br />
<span class="remark">&apos; Событие любых исходящих данных</span><br />
<span class="keyword">Sub</span> SendedRawMessage(<span class="keyword">ByVal</span> AdvData <span class="keyword">As</span> <span class="datatype">Any Ptr</span>, <span class="keyword">ByVal</span> MessageText <span class="keyword">As</span> <span class="datatype">WString Ptr</span>)<br />
&t;<span class="remark">&apos; Просто печатаем на консоль пришедшие данные</span><br />
&t;<span class="keyword">Print</span> MessageText<br />
<span class="keyword">End Sub</span><br />
<br />
<span class="remark">&apos; Серверное сообщение</span><br />
<span class="keyword">Function</span> ServerMessage(<span class="keyword">ByVal</span> AdvData <span class="keyword">As</span> <span class="datatype">Any Ptr</span>, <span class="keyword">ByVal</span> ServerCode <span class="keyword">As</span> <span class="datatype">WString Ptr</span>, <span class="keyword">ByVal</span> MessageText <span class="keyword">As</span> <span class="datatype">WString Ptr</span>)<span class="keyword">As</span> <span class="datatype">ResultType</span><br />
&t;<span class="keyword">If</span> ServerCode = RPL_WELLCOME <span class="keyword">Then</span><br />
&t;&t;<span class="remark">&apos; Отправить идентификационные данные бота</span><br />
&t;&t;objClient.SendIrcMessage(<span class="string">&quot;NickServ&quot;</span>, <span class="string">&quot;identify&quot;</span> &amp; BotPassword)<br />
&t;&t;<span class="remark">&apos; Присоединиться к каналам</span><br />
&t;&t;objClient.JoinChannel(<span class="string">&quot;##freebasic-ru&quot;</span>)<br />
&t;<span class="keyword">End If</span><br />
&t;<span class="keyword">Return</span> ResultType.None<br />
<span class="keyword">End Function</span><br />
<br />
<span class="remark">&apos; Личное сообщение</span><br />
<span class="keyword">Function</span> IrcPrivateMessage(<span class="keyword">ByVal</span> AdvData <span class="keyword">As</span> <span class="datatype">Any Ptr</span>, <span class="keyword">ByVal</span> User <span class="keyword">As</span> <span class="datatype">WString Ptr</span>, <span class="keyword">ByVal</span> MessageText <span class="keyword">As</span> <span class="datatype">WString Ptr</span>)<span class="keyword">As</span> <span class="datatype">ResultType</span><br />
&t;<span class="remark">&apos; Команда от админа</span><br />
&t;<span class="keyword">If</span> User = AdminNick <span class="keyword">Then</span><br />
&t;&t;<span class="keyword">Dim</span> intMemory <span class="keyword">As</span> <span class="datatype">UInteger</span> = <span class="keyword">Fre</span>()<br />
&t;&t;objClient.SendIrcMessage(AdminNick, <span class="string">&quot;Количество свободной памяти в байтах = &quot;</span> &amp; <span class="keyword">WStr</span>(intMemory))<br />
&t;<span class="keyword">End If</span><br />
&t;<span class="keyword">Return</span> ResultType.None<br />
<span class="keyword">End Function</span>
</code></p>

<p>Давай пройдёмся по коду. Первые строки просто сообщает компилятору FreeBASIC о подключении заголовочных файлов библиотеки libIRC. Наш бот будет принимать и отвечать в кодировке UTF-8, поэтому никаких проблем с русскими буквами быть не должно. В заголовочном файле объявляются имя сервера, порт для подключения, имя бота, имя владельца бота и пароль для соединения с сервером (в данном случае пароль пустой). Перед компиляцией их потребуется изменить на имя твоего зарегистрированного бота.</p>

<p>Но сперва нужно сделать одну вещь: установить обработчики событий, которые бот генерирует при получении данных от IRC‐сервера. Наш бот ведь не глухонемой, и он должен знать, на какие сообщения давать ответ. Обработчик события — это функция, которую будет вызывать библиотека в ответ на какой‐нибудь сигнал.</p>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="keyword">With</span> objClient<br />
&t;.ReceivedRawMessageEvent = @ReceivedRawMessage<br />
&t;.SendedRawMessageEvent = @SendedRawMessage<br />
&t;.ServerMessageEvent = @ServerMessage<br />
&t;.PrivateMessageEvent = @IrcPrivateMessage<br />
<span class="keyword">End With</span>
</code></p>

<p>В данном случае события SendedRawMessageEvent и ReceivedRawMessageEvent срабатывают всякий раз, когда на сервер отправляется или приходит с него любые данные, ServerMessageEvent срабатывает при получении специального серверного сообщения (уже после события ReceivedRawMessageEvent), а PrivateMessageEvent — при получении ботом личного сообщения (тоже после события PrivateMessageEvent). IRC‐бот также может реагировать и на всякие другие события, например, присоединение пользователя к каналу, смена темы канала, но в нашем случае они не рассматриваются (домашнее задание: изучи заголовочный файл IrcEvents.bi, посмотри, какие ещё события может генерировать библиотека и установи для них обработчики).</p>

<p>Вызов objClient.OpenIrc() приводит бота в действие. Эта функция открывает соединение с сервером, отправляя специально подготовленную строку соединения. При успешном соединении с сервером функция возвращает значение ResultType.None</p>

<p>Теперь пора получать данные от сервера, что делается в бесконечном цикле функцией objClient.GetData(), при успешном выполнении возвращающей всё то же ResultType.None. Функция запускает внутри себя обработчик данных, пришедших с IRC‐сервера и в зависимости от данных генерирует соответствующие события. На четыре события мы уже подписались ранее в коде.</p>

<h3><a id="c3c3">События</a></h3>

<p>ReceivedRawMessageEvent — первое событие, которое вызывается при успешном получении данных. В качестве аргумента передаётся указатель на дополнительные данные AdvData. В нашем случае он пуст, но вполне допустимо было бы на этипе инициализации присвоить туда какие‐нибудь значение. Второй аргумент MessageText — это текст, пришедший от сервера.</p>
<p>В обработчике события мы просто выводим MessageText на консоль.</p>

<p>SendedRawMessageEvent аналогично ReceivedRawMessageEvent, только происходит оно при любой отправке данных на сервер. Эти два события показывают всю кухню IRC‐взаимодействия бота и сервера.</p>

<p>Событие ServerMessageEvent вызывается после ReceivedRawMessageEvent. Оно происходит тогда, когда ни одно из других специальных событий, таких как IrcPrivateMessage, не срабатывает. Второй аргумент события — это специальный числовой код, записанный в спецификации IRC‐протокола. Нас интересует код RPL_WELLCOME, что в цифрах &quot;001&quot;. Значит, теперь можно отправлять на сервер идентификационную строку с паролем бота и присоединяться к каналам. Nickserv — это встроенный сервис‐обработчик имени пользователя на большинстве серверов IRC. Мы предоставляем ему пароль бота для аутентификации его на сервере, отправляя его личным сообщением.</p>

<p>Кстати, каналов, на которых будет сидеть бот, может быть несколько, а может и не быть вовсе. Однако, чтобы определить, онлайн ли бот сейчас, очень удобно зайти на канал и посмотреть в списке пользователей, есть ли он там.</p>

<p>Теперь наш бот будет смирно сидеть на канале, пока его оттуда не выгонят. Следующая функция здесь — это IrcPrivateMessage. Этот обработчик события IrcPrivateMessageEvent вызывается когда бот получает личное сообщение, то есть сообщение в отдельном диалоге вне какого‐нибудь канала. Бот проверит, является ли отправитель администратором бота, и если это так, то отправит текущее количество свободной памяти в системе пользователю с ником AdminNick, то есть твоему обычному пользователю.</p>





<h2><a id="c4">Продолжаем работать</a></h2>

<p>Пора запустить бота. Открой файл bot.bi и измените конфигурационные константы сверху в соответствии с твоими настройками, а именно впиши имя пользователя и пароль для бота, своё ник администратора бота, имя канала, на котором будет висеть бот. Запусти IRC‐клиента, авторизуйся на сервере и зайди в канал, который ты указал для бота. Скомпилируй бота командой:</p>

<p class="codebox"><span>Код</span> <span>Batch</span><br /><code>
fbc -l IRC bot.bas
</code></p>

<p>Затем запусти бота.</p>

<p>Через пару секунд бот установит соединение, авторизуется на сервере и зайдёт в указанный канал. Командой /msg из своего клиента начни приватный диалог с ботом и скажи ему всё, что угодно — бот пришлёт результат выполнения функции Fre(). Отлично! Теперь можно запустить бота на любом компьютере и отслеживать уровень загрузки удалённой системы просто общаясь с ботом в IRC‐чате.</p>

<p>Хотя нарекания остаются. Бот умеет выполнять только команду Fre() — может, тебе этого и достаточно, но он способен на гораздо большее. Вряд ли ты захочешь разрешить боту выключать компьютер, но с его помощью можно получить о компьютере массу информации, запускать и останавливать приложения, отправлять письма по электронной почте, соединяться с сайтами и скачивать содержимое. Можно даже сделать говорящего бота, отвечающего на сообщения пользователя случайной фразой из списка, бота для игр в карты, крестики‐нолики, морской бой, викторину с вопросами, мафию, бота‐читателя RSS‐лент и прочее.</p>

<p>Это очень гибкое решение: если кажется, что с компьютером что‐то случилось, можно запустить бота на web‐сервере и допросить его; или запустить бота на домашнем компьютере и прямо с рабочего места запускать и останавливать с его помощью определённые процессы. Возможности безграничны — а всего‐то нужен доступ к IRC.</p>




<h2><a id="c5">Ссылки</a></h2>
<ul>
	<li>Ссылка на библиотеку <a href="/res/libIRC.zip">IRC</a>.</li>
	<li><a href="https://ru.wikipedia.org/wiki/IRC">Статья про IRC</a> в википедии.</li>
</ul>

<h2>Поделись ссылочкой в социальных сетях</h2>
<div id="vk_share_button"></div>


<hr />

<p class="footer">Сайт создан по технологии XHTML</p>

<p class="footer">
	
	<span id="pLiveInternet"></span>
	
	<a href="http://wscatalog.ru/dir/programmirovanie-na-yazyke-freebasic" title="Сайт есть в Каталоге">
		<img width="88" height="31" src="http://wscatalog.ru/knopka.png" alt="Логотип wscatalog.ru" />
	</a>
	<a href="http://gluci.ru/dir/freebasic-na-russkom" title="Необычный Каталог Сайтов">
		<img width="88" height="31" src="http://gluci.ru/88x31.png" alt="Логотип Глюки" />
	</a> 
</p>

<script type="text/javascript" src="https://vk.com/js/api/share.js?93" charset="windows-1251"></script>
<script type="text/javascript">var docUrl=document.URL.toString();document.getElementById("vk_share_button").innerHTML=VK.Share.button(docUrl, {type: "round"});</script>


<script type="text/javascript">var idL=document.getElementById("pLiveInternet");var idA=document.createElement("a");idA.href="//www.liveinternet.ru/stat/freebasic.su";idA.title="Счётчик посещений LiveInternet";var idImg=document.createElement("img");idImg.src="//counter.yadro.ru/hit?t44."+Math.round(1+18*Math.random())+";r"+escape(document.referrer)+((typeof(screen)=="undefined")?"":";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?screen.colorDepth:screen.pixelDepth))+";u"+escape(docUrl)+";"+Math.random();idImg.alt="Логотип LiveInternet";idA.appendChild(idImg);idL.appendChild(idA);</script>

</body></html>