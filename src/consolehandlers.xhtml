<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd"[

	<!ENTITY nbsp "&#160;">
	<!ENTITY t "&#160;&#160;&#160;&#160;">
	
]>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml http://www.w3.org/MarkUp/SCHEMA/xhtml11.xsd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<head>
	<title>Обработчики управляющих сигналов консоли</title>
	<meta name="description" content="Использование функции SetConsoleCtrlHandler, установка обработчика управляющих сигналов консоли для перехвата клавиш Ctrl+C, Ctrl+Break и выполнения очистки" />
	<meta name="keywords" content="консоль, SetConsoleCtrlHandler, HandlerRoutine, WinAPI" />
	
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link href="/styles.css" type="text/css" rel="stylesheet" />
	
</head>

<body>

<ul class="navbar">
	<li><a href="/">Главная</a></li>
	<li><a href="/src/">Статьи</a></li>
	<li><a href="/code/">Проекты</a></li>
	<li><a href="/books/">Учебник</a></li>
	<li><a href="/links.xhtml">Ссылки</a></li>
	<li><a href="/about.xhtml">О сайте</a></li>
</ul>


<h1>Обработчики управляющих сигналов консоли</h1>

<p><span class="postername">Эрик Замабувараев‐Ёмолкуу</span> <span class="date">14.06.2016 13:49:58</span></p>

<p>Каждый консольный процесс имеет свой собственный список функций, которые обрабатывают сигналы Ctrl+Break и Ctrl+C. Эти функции также обрабатывают сигналы, созданные системой, когда пользователь закрывает консоль, заканчивает работу в сети или завершает систему. Вначале список обработчиков для каждого процесса содержит только заданную по умолчанию функцию, которая вызывает функцию ExitProcess.</p>


<ol class="contents">
	<li><a href="#c1">Функция SetConsoleCtrlHandler</a></li>
	<li><a href="#c2">Пользовательская функция‐обработчик</a></li>
	<li><a href="#c3">Пример</a></li>
</ol>



<h2><a id="c1">Функция SetConsoleCtrlHandler</a></h2>

<p>Добавляет или удаляет пользовательскую функцию в список обработчиков.</p>

<p>Когда консольный процесс получает какой‐либо из управляющих сигналов, его функции обработчиков особых ситуаций обращаются к последнему из зарегистрированных до тех пор, пока один из обработчиков не возвратит значение TRUE. Если ни один из обработчиков не возвращает TRUE, вызывается заданный по умолчанию обработчик.</p>

<p>Вот определение функции <strong>SetConsoleCtrlHandler</strong> из заголовочных файлов:</p>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="keyword">Declare</span> <span class="keyword">Function</span> SetConsoleCtrlHandler(<span class="keyword">ByVal</span> HandlerRoutine <span class="keyword">As</span> <span class="datatype">PHANDLER_ROUTINE</span>, <span class="keyword">ByVal</span> Add <span class="keyword">As</span> <span class="datatype">WINBOOL</span>)<span class="keyword">As</span> <span class="datatype">WINBOOL</span>
</code></p>

<h3>Параметры</h3>

<dl>
<dt>HandlerRoutine</dt>
<dd>Указатель на пользовательскую функцию, которая будет вызываться в качестве обработчика. Эта функция должна принимать один параметр типа DWORD и возвращать значение типа WINBOOL.</dd>
</dl>

<dl>
<dt>Add</dt>
<dd>Значению флага Add, равному TRUE, соответствует добавление процедуры обработчика, в противном случае происходит удаление процедуры из списка процедур обработки управляющих сигналов консоли.</dd>
</dl>

<p>С одним сигналом могут быть ассоциированы несколько обработчиков, причём обработчики можно добавлять и удалять.</p>

<ul>
	<li>Если значение параметра HandlerRoutine равно NULL, а параметра Add — TRUE, то сигналы Ctrl-C будут игнорироваться.</li>
	<li>Процедура обработчика фактически выполняется как независимый поток внутри процесса. При этом выполнение основной программы не приостанавливается.</li>
</ul>

<h2><a id="c2">Пользовательская функция‐обработчик</a></h2>

<p>Пользовательская функция должна принимать один параметр типа DWORD и возвращать значение типа WinBool, например, так:</p>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="keyword">Declare</span> <span class="keyword">Function</span> HandlerRoutine(<span class="keyword">ByVal</span> dwCtrlType <span class="keyword">As</span> <span class="datatype">DWORD</span>)<span class="keyword">As</span> <span class="datatype">WinBool</span>
</code></p>

<p>Имя функции может быть любым. Эту функцию вызывает операционная система и передаёт параметром dwCtrlType тип события. dwCtrlType может принимать значения:</p>

<dl>
<dt>CTRL_C_EVENT</dt>
<dd>Происходит при нажатии пользователем Ctrl+C.</dd>
</dl>

<dl>
<dt>CTRL_BREAK_EVENT</dt>
<dd>Происходит при нажатии пользователем Ctrl+Break.</dd>
</dl>

<dl>
<dt>CTRL_CLOSE_EVENT</dt>
<dd>Происходит при закрытии консоли по крестику вверху справа. Если функция‐обработчик вернёт значение TRUE, это заставит систему показать диалоговое окно, которое дает пользователю выбор завершения процесса и закрытия консоли или разрешения процесса, чтобы продолжить выполнение.</dd>
</dl>

<dl>
<dt>CTRL_LOGOFF_EVENT</dt>
<dd>Происходит при выходе пользователя из системы.</dd>
</dl>

<dl>
<dt>CTRL_SHUTDOWN_EVENT</dt>
<dd>Происходит при выключении системы.</dd>
</dl>

<p>Если функция обрабатывает управляющий сигнал, она должна возвратить TRUE. Если она возвращает значение FALSE, используется следующая функция обработчика в списке обработчиков для этого процесса.</p>

<h2><a id="c3">Пример</a></h2>

<p class="codebox"><span>Код</span> <span>FreeBASIC</span><br /><code>
<span class="preprocessor">#define unicode</span><br />
<span class="preprocessor">#include once &quot;windows.bi&quot;</span><br />
<br />
<span class="keyword">Function</span> HandlerRoutine(<span class="keyword">ByVal</span> dwCtrlType <span class="keyword">As</span> <span class="datatype">DWORD</span>)<span class="keyword">As</span> <span class="datatype">WinBool</span><br />
&t;<span class="keyword">Select</span> <span class="keyword">Case</span> dwCtrlType<br />
&t;&t;<span class="keyword">Case</span> CTRL_C_EVENT<br />
&t;&t;&t;<span class="keyword">Print</span> <span class="string">&quot;Нажали Ctrl+C&quot;</span><br />
&t;&t;<span class="keyword">Case</span> CTRL_BREAK_EVENT<br />
&t;&t;&t;<span class="keyword">Print</span> <span class="string">&quot;Нажали Ctrl+Break&quot;</span><br />
&t;&t;<span class="keyword">Case</span> CTRL_CLOSE_EVENT<br />
&t;&t;&t;<span class="keyword">Print</span> <span class="string">&quot;Закрытие по крестику вверху справа&quot;</span><br />
&t;&t;<span class="keyword">Case</span> CTRL_LOGOFF_EVENT<br />
&t;&t;&t;<span class="keyword">Print</span> <span class="string">&quot;Выход пользователя&quot;</span><br />
&t;&t;<span class="keyword">Case</span> CTRL_SHUTDOWN_EVENT<br />
&t;&t;&t;<span class="keyword">Print</span> <span class="string">&quot;Выключение компьютера&quot;</span><br />
&t;<span class="keyword">End Select</span><br />
<br />
&t;<span class="keyword">Return</span> <span class="datatype">False</span><br />
<span class="keyword">End Function</span><br />
<br />
<br />
<span class="remark">&apos; Установка обработчика</span><br />
<span class="keyword">If</span> SetConsoleCtrlHandler(@HandlerRoutine, <span class="datatype">True</span>) = 0 <span class="keyword">Then</span><br />
&t;<span class="remark">&apos; Ошибка, выходим</span><br />
&t;<span class="keyword">Print</span> <span class="string">&quot;Ошибка&quot;</span><br />
&t;<span class="keyword">End</span>(1)<br />
<span class="keyword">End If</span><br />
<br />
<span class="remark">&apos; Задержка</span><br />
<span class="keyword">Do</span><br />
&t;<span class="keyword">Sleep</span>(1000)<br />
<span class="keyword">Loop</span>
</code></p>


<h2>Поделись ссылочкой в социальных сетях</h2>
<div id="vk_share_button"></div>


<hr />

<p class="footer">Сайт создан по технологии XHTML</p>

<p class="footer">
	
	<span id="pLiveInternet"></span>
	
	<a href="http://wscatalog.ru/dir/programmirovanie-na-yazyke-freebasic" title="Сайт есть в Каталоге">
		<img width="88" height="31" src="http://wscatalog.ru/knopka.png" alt="Логотип wscatalog.ru" />
	</a>
	<a href="http://gluci.ru/dir/freebasic-na-russkom" title="Необычный Каталог Сайтов">
		<img width="88" height="31" src="http://gluci.ru/88x31.png" alt="Логотип Глюки" />
	</a> 
</p>

<script type="text/javascript" src="https://vk.com/js/api/share.js?93" charset="windows-1251"></script>
<script type="text/javascript">var docUrl=document.URL.toString();document.getElementById("vk_share_button").innerHTML=VK.Share.button(docUrl, {type: "round"});</script>


<script type="text/javascript">var idL=document.getElementById("pLiveInternet");var idA=document.createElement("a");idA.href="//www.liveinternet.ru/stat/freebasic.su";idA.title="Счётчик посещений LiveInternet";var idImg=document.createElement("img");idImg.src="//counter.yadro.ru/hit?t44."+Math.round(1+18*Math.random())+";r"+escape(document.referrer)+((typeof(screen)=="undefined")?"":";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?screen.colorDepth:screen.pixelDepth))+";u"+escape(docUrl)+";"+Math.random();idImg.alt="Логотип LiveInternet";idA.appendChild(idImg);idL.appendChild(idA);</script>

</body></html>