<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/2002/04/xhtml-math-svg/xhtml-math-svg.dtd"[

	<!ENTITY nbsp "&#160;">
	<!ENTITY t "&#160;&#160;&#160;&#160;">
	
]>

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml http://www.w3.org/MarkUp/SCHEMA/xhtml11.xsd" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<head>
	<title>Вебсервер Station922</title>
	<meta name="description" content="Http сервер, написанный на FreeBASIC, для Windows " />
	<meta name="keywords" content="http-server, http, freebasic, windows" />
	
	<link href="/styles.css" type="text/css" rel="stylesheet" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	
</head>

<body>

<header>
	
	<nav>
		<a href="/">Главная</a>
		<a href="/src/">Статьи</a>
		<a href="/code/">Проекты</a>
		<a href="/books/">Учебник</a>
		<a href="/links.xhtml">Ссылки</a>
		<a href="/about.xhtml">О сайте</a>
	</nav>
	
</header>

<h1>Вебсервер Station922</h1>

<main>

	<p>Компактный вебсервер для Windows, написанный на фрибейсике. Умеет обрабатывать методы CONNECT, GET, HEAD, PUT, DELETE, TRACE и OPTIONS.</p>
	
	<p>Сервер работает «из коробки», необходимо лишь прописать пути к сайтам в файле конфигурации. Для ведения журнала сетевых соединений сервер создаёт каталог «logs» в папке с программой.</p>
	
	<p>Вебсервер назван в честь запрещённого видеофайла <a href="https://mrakopedia.org/wiki/21:Буратино">station922.mkv</a>.</p>
	
	
	<h2>Конфигурация сервера и сайтов</h2>
	
	<p>Настройки сервера и сайтов хранятся в обычных INI‐файлах. Для поддержки юникодных путей рекомендется сохранять такие файлы в кодировке UTF-16 LE.</p>
	
	<h3>Серверные настройки</h3>
	
	<p>Лежат в файле «WebServer.ini» в каталоге с программой. Пример:</p>
	
	<p class="codebox"><span>Код</span> <span>INI‐файл</span><br /><code>
		[WebServer]<br />
		ListenAddress=0.0.0.0<br />
		Port=80<br />
		ConnectBindAddress=0.0.0.0<br />
		ConnectBindPort=0
	</code></p>
	
	<h4>Описание</h4>
	
	<dl>
	<dt>ListenAddress</dt>
	<dd>Сетевой адрес, к которому будет привязан вебсервер. По умолчанию 0.0.0.0, то есть сервер будет ожидать соединений со всех сетевых интерфейсов.</dd>
	</dl>
	
	<dl>
	<dt>Port</dt>
	<dd>Порт для прослушивания. По умолчанию 80 (стандартный HTTP порт).</dd>
	</dl>
	
	<dl>
	<dt>ConnectBindAddress</dt>
	<dd>Адрес, к которому будет привязываться сервер для выполнения метода CONNECT. По умолчанию 0.0.0.0.</dd>
	</dl>
	
	<dl>
	<dt>ConnectBindPort</dt>
	<dd>Порт, к которому будет привязываться сервер для выполнения метода CONNECT. По умолчанию 0, это значит, что система будет сама выбирать порт для привязки.</dd>
	</dl>
	
	<h3>Методы CONNECT и PUT</h3>
	
	<p>Для своей работы эти методы требуют имени пользователя и пароля. Если имя пользователя и пароль не прописаны, то вебсервер будет отвечать на методы ошибкой «401 Unauthorized».</p>
	
	<p>Создай в папке с программой файл «users.config» (текстовый INI‐файл) примерно следующего содержания:</p>

	<p class="codebox"><span>Код</span> <span>INI‐файл</span><br /><code>
		[admins]<br />
		user=password
	</code></p>
	
	
	<h4>Описание</h4>
	
	<dl>
	<dt>user</dt>
	<dd>Имя пользователя для авторизации</dd>
	</dl>
	
	<dl>
	<dt>password</dt>
	<dd>Пароль пользователя.</dd>
	</dl>
	
	<p>Для метода PUT аналогичный файл должен лежать в корневой директории сайта.</p>
	
	
	<h3>Настройки сайтов</h3>
	
	<p>Лежат в файле «WebSites.ini» в каталоге с программой. Каждая секция в файле описывает отдельный сайт, определяемый HTTP‐заголовком «Host», для каждого сайта необходимо создавать отдельную секцию. Вебсервер считае, что example.org, www.example.org и www.example.org:80 — разные сайты, каждый из которых требует отдельной секции. Пример:</p>
	
	<p class="codebox"><span>Код</span> <span>INI‐файл</span><br /><code>
		[localhost]<br />
		VirtualPath=/<br />
		PhisycalDir=c:\programming\сайты\localhost\<br />
		IsMoved=0<br />
		MovedUrl=http://localhost
	</code></p>
	
	
	<h4>Описание</h4>
	
	<dl>
	<dt>VirtualPath</dt>
	<dd>Виртуальное имя сайта. Используется в сообщениях об ошибках.</dd>
	</dl>
	
	<dl>
	<dt>PhisycalDir</dt>
	<dd>Физический каталог, где расположены файлы сайта, корневой каталог сайта.</dd>
	</dl>
	
	<dl>
	<dt>IsMoved</dt>
	<dd>Флаг перенаправления на другой сайт. Например, клиент делает запрос на example.org, а настоящий сайт находится на www.example.org. В таком случае необходимо установить 1 для перенаправления.</dd>
	</dl>
	
	<dl>
	<dt>MovedUrl</dt>
	<dd>Адрес сайта, куда сервер будет перенаправлять при установленном флаге перенаправления. Необходимо начинать с «http://»</dd>
	</dl>
	
	<p>Таким образом при стандартных настройках, чтобы получить доступ к сайту, необходимо в браузере набрать http://localhost/</p>
	
	<p>Максимальное количество сайтов, поддерживаемое вебсервером: 50.</p>
	
	
	<h3>Файлы по умолчанию</h3>
	
	<p>Если URL запрашиваемого ресурса не содержит полный путь к файлу, например, клиент запрашивает http://localhost/, то сервер ищет в каталоге сайта файлы в порядке очерёдности:</p>
	
	<ul>
		<li>default.xml</li>
		<li>default.xhtml</li>
		<li>default.htm</li>
		<li>default.html</li>
		<li>index.xml</li>
		<li>index.xhtml</li>
		<li>index.htm</li>
		<li>index.html</li>
	</ul>
	
	<p>Если ни один из этих файлов не найден, то сервер отправляет ошибку «404 Not Found» в общем случае или «410 Gone» если найдёт файл default.xml.410.</p>
	
	
	<h2>Внутренняя кухня сервера</h2>
	
	
	<h3>MIME и расширения файлов</h3>
	
	<p>MIME меняются довольно редко, нет нужны каждый раз считывать информацию о них из файлов конфигурации или реестра, поэтому в сервере жёстко прописаны стандартные MIME типы содержимого и расширения файлов.</p>
	
	<p>Константы с расширениями файлов, функции обработки MIME располагаются в модуле <code>Mime.bas</code>.</p>

	<p>В структуру типов документа также встроен флаг, отвечающий за текстовое содержимое. Если функции из модуля <code>Mime.bas</code> определят, что запрашиваемый клиентом документ является текстом (например: <code>text/plain</code>, <code>text/html</code>, <code>application/xml</code>), то для такого файла сервер попытается найти метку порядка следования байт (BOM) и на основании их определить кодировку документа. Возможные варианты:</p>
	
	<ul>
		<li>метка BOM найдена и соответствует таковой при UTF-8, в этом случае к заголовку Content-Type добавляется указатель на кодировку `charset=utf-8`, а клиенту отправляется содержимое файла без первых трёх байт;</li>
		
		<li>метка BOM найдена и соответствует таковой при UTF-16 LE, в этом случае к заголовку Content-Type добавляется указатель на кодировку `charset=utf-16`, а клиенту отправляется содержимое файла целиком как есть;</li>
		
		<li>метка BOM найдена и соответствует таковой при UTF-16 BE, в этом случае к заголовку Content-Type добавляется указатель на кодировку `charset=utf-16`, а клиенту отправляется содержимое файла без первых двух байт;</li>
		
		<li>метка BOM не найдена, то сервер считает, что файл в кодировке ASCII и не указывает кодировку в ответе клиенту, клиенту отправляется содержимое файла целиком как есть.</li>
	</ul>
	
	<p>Когда клиент запрашивает файл с незарегистрированным расширением, то сервер не может найти для него MIME тип. В таком случае сервер ответит ошибкой «403 Forbidden». Таким образом клиенту не будут отправлены файлы конфигурации <code>*.config</code>.</p>
	
	
	<h3>Сжатое содержимое</h3>
	
	<p>Сервер не умеет сжимать файлы «на лету», однако он умеет отдавать уже готовое сжатое содержимое. Для этого сжатое содержимое должно располагаться в специальном файле с двойным расширением. Для сжатия типа <code>gzip</code> используется расширение <code>*.gz</code>, для сжатия <code>deflate</code> — расширение <code>*.deflate</code>.</p>
	
	<p>Например, клиент запрашивает файл <code>default.htm</code> и передаёт поддерживаемый тип сжатия <code>gzip</code> в заголовке <code>Accept-Encoding</code>. Если файл <code>default.htm.gz</code> существует, то сервер отправит его вместо оригинального <code>default.htm</code>. Однако данные о дате последней модификации и ETag будут рассчитываться от оригинального файла.</p>
	
	<p>Кодировка текстовых файлов определяется по оригинальному файлу и добавляется в заголовки ответа. Несмотря на то, что для кодировок UTF-8 и UTF-16 LE сервер не отправляет клиенту метку BOM, то есть первые три или два байта, сервер отправляет сжатый файл полностью как есть. Поэтому для UTF-8 и UTF-16 BE файлов в стажом файле должна отсутствовать метка BOM.</p>
	
	
	<h3>Файл с дополнительными заголовками ответа</h3>
	
	<p>Сервер отправляет клиенту минимальное количество заголовков для правильного отображения файла в браузере. Однако иногда их бывает недостаточно или требуется переопределить некоторые их них. Для такого случая применяются файлы типа <code>*.headers</code>.</p>
	
	<p>Файл с дополнительными заголовками следует создавать как текстовый файл в кодировке ASCII, где перечисляются заголовки ответов, каждый на новой строке. Например, для файла <code>default.htm</code> файл с заголовками <code>default.htm.headers</code> может иметь вид:</p>
	
	<p class="codebox"><span>Код</span> <span>Plain text</span><br /><code>
		Content-Language: ru<br />
		Content-Type: application/xml
	</code></p>
	
	<p>При чтении такого файла сервер добавляет значения заголовков в коллекцию перед тем как сформировать ответ. С помощью файла с дополнительными заголовками можно переопределить тип документа, указать используемый язык документа, необходимое время кеширования и так далее. Сервер не будет добавлять нераспознанные заголовкив коллекцию.</p>
	
	<p class="codebox"><span>Код</span> <span>Plain text</span><br /><code>
		Accept-Ranges<br />
		Age<br />
		Allow<br />
		Cache-Control<br />
		Content-Encoding<br />
		Content-Language<br />
		Content-Location<br />
		Content-MD5<br />
		Content-Range<br />
		Content-Type<br />
		ETag<br />
		Expires<br />
		Last-Modified<br />
		Location<br />
		Pragma<br />
		Proxy-Authenticate<br />
		Retry-After<br />
		Set-Cookie<br />
		Trailer<br />
		Upgrade<br />
		Via<br />
		Warning<br />
		WWW-Authenticate
	</code></p>
	
	
	<p>Однако таким файлом нельзя переопределить следующие заголовки:</p>
	
	<p class="codebox"><span>Код</span> <span>Plain text</span><br /><code>
		Connection<br />
		Content-Length<br />
		Date<br />
		Keep-Alive<br />
		Server<br />
		Transfer-Encoding<br />
		Vary
	</code></p>
	
	
	<h3>Ошибки «404 Not Found» и «410 Gone»</h3>
	
	<p>Если запрашиваемый клиентом файл не найден, то сервер ищет файл с расширением <code>*.410</code>. Если он будет найден, то сервер отправит ошибку «410 Gone». Если не найден, то будет отправлена ошибка «404 Not Found».</p>
	
	<p>Ошибка «404 Not Found» подразумевает, что файл не найден, но в будущем может появиться по этому пути. Ошибка «410 Gone» используется для указания того, что файл раньше существовал по этому пути, но теперь удалён навсегда и клиентам следует удалить все ссылки на такой файл. Для индикации этого случая предусмотрен файл с двойным расширением <code>*.410</code>.</p>
	
	
	<h2>Компиляция</h2>
	
	<p>Вебсервер можно скомпилировать как обычное консольное приложение и как службу Windows.</p>
	
	
	<h3>Обычная версия</h3>
	
	<p class="codebox"><span>Код</span> <span>Batch file</span><br /><code>
		fbc.exe -mt -x "WebServer.exe" Main.bas WebServer.bas Network.bas ThreadProc.bas ReadHeadersResult.bas WebUtils.bas ProcessCgiRequest.bas ProcessConnectRequest.bas ProcessDeleteRequest.bas ProcessDllRequest.bas ProcessGetHeadRequest.bas ProcessOptionsRequest.bas ProcessPutRequest.bas ProcessTraceRequest.bas base64.bas Mime.bas Http.bas WebSite.bas HeapOnArray.bas WriteHttpError.bas StreamSocketReader.bas WebRequest.bas URI.bas AppendingBuffer.bas WebResponse.bas
	</code></p>
	
	
	<h3>В виде службы Windows</h3>
	
	<p class="codebox"><span>Код</span> <span>Batch file</span><br /><code>
		fbc.exe -mt -x "WebServer.exe" -d service=true WebServerService.bas WebServer.bas Network.bas ThreadProc.bas ReadHeadersResult.bas WebUtils.bas ProcessCgiRequest.bas ProcessConnectRequest.bas ProcessDeleteRequest.bas ProcessDllRequest.bas ProcessGetHeadRequest.bas ProcessOptionsRequest.bas ProcessPutRequest.bas ProcessTraceRequest.bas base64.bas Mime.bas Http.bas WebSite.bas HeapOnArray.bas WriteHttpError.bas StreamSocketReader.bas WebRequest.bas URI.bas AppendingBuffer.bas WebResponse.bas
	</code></p>
	
	<p>Для уменьшения кода и размера исполняемого файла в сервере не содержится методов автоматической регистрации службы. Для этого можно использовать утилиту <code>sc</code>:</p>
	
	<p class="codebox"><span>Код</span> <span>Batch file</span><br /><code>
		set current_dir=%~dp0<br />
		sc create FreeBASICWebServer binPath= "%current_dir%WebServer.exe" start= "auto"<br />
		sc start FreeBASICWebServer
	</code></p>
	
	
	<h2>Ссылки</h2>
	
	<p>Скачать вебсервер можно с <a href="https://github.com/BatchedFiles/Station922">официального хранилища Station922 на гитхабе</a>.</p>
	
	
	
	<h2>Поделись ссылочкой в социальных сетях</h2>
	<div id="vk_share_button"></div>
	
</main>

<hr />

<footer>
	<p>Сайт создан по технологии XHTML</p>
	<p>
		<span id="pLiveInternet"></span>
		<a href="http://wscatalog.ru/dir/programmirovanie-na-yazyke-freebasic" title="Сайт есть в Каталоге">
			<img width="88" height="31" src="http://wscatalog.ru/knopka.png" alt="Логотип wscatalog.ru" />
		</a>
		<a href="http://gluci.ru/dir/freebasic-na-russkom" title="Необычный Каталог Сайтов">
			<img width="88" height="31" src="http://gluci.ru/88x31.png" alt="Логотип Глюки" />
		</a> 
	</p>
</footer>

<script type="text/javascript" src="https://vk.com/js/api/share.js?93" charset="windows-1251"></script>
<script type="text/javascript">var docUrl=document.URL.toString();document.getElementById("vk_share_button").innerHTML=VK.Share.button(docUrl, {type: "round"});</script>


<script type="text/javascript">var idL=document.getElementById("pLiveInternet");var idA=document.createElement("a");idA.href="//www.liveinternet.ru/stat/freebasic.su";idA.title="Счётчик посещений LiveInternet";var idImg=document.createElement("img");idImg.src="//counter.yadro.ru/hit?t44."+Math.round(1+18*Math.random())+";r"+escape(document.referrer)+((typeof(screen)=="undefined")?"":";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?screen.colorDepth:screen.pixelDepth))+";u"+escape(docUrl)+";"+Math.random();idImg.alt="Логотип LiveInternet";idA.appendChild(idImg);idL.appendChild(idA);</script>

</body></html>